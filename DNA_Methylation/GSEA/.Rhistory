z <- annot[(annot[ ,2] == colnames(y)),1]
View(y)
colnames(y) <- rownames(datan)[81]
View(y)
z <- annot[(annot[ ,2] == colnames(y)),1]
z
annot[(annot[ ,2] == colnames(y)),1]
colnames(y)
annot[,2] == colnames(y)
z <- annot[annot[,2] == colnames(y), ]
View(z)
y <- as.matrix(datan[82, ])
colnames(y) <- rownames(datan)[82]
z <- annot[(annot[ ,2] == colnames(y)),1]
z <- list(annot[(annot[ ,2] == colnames(y)),1])
z[1]
z[2]
z[3]
annot[(annot[ ,2] == colnames(y)),1]
z <- as.character(annot[(annot[ ,2] == colnames(y)),1])
x <- as.matrix(methyn[rownames(methyn) %in% z, ])
View(x)
rownames(x) <- z
colnames(x) <- z
View(x)
nrow(x) >= 2
y <- as.matrix(datan[1, ])
colnames(y) <- rownames(datan)[1]
z <- as.character(annot[(annot[ ,2] == colnames(y)),1])
x <- as.matrix(methyn[rownames(methyn) %in% z, ])
View(x)
colnames(x) <- z
length(z)
x <- t(x)
View(x)
View(y)
cvfit <- cv.glmnet(x,y)
plot(cvfit)
GLMdata <- foreach(i =1:100) %dopar%
{
y <- as.matrix(datan[i, ])
colnames(y) <- rownames(datan)[i]
z <- as.character(annot[(annot[ ,2] == colnames(y)),1])
x <- as.matrix(methyn[rownames(methyn) %in% z, ])
if(nrow(x) == 1) z
else if(nrow(x) >= 2)
{
x <- t(x)
class(x) <- "numeric"
cvfit <- cv.glmnet(x,y)
as.matrix(coef(cvfit, s = "lambda.min"))
}
else 0
}
y <- as.matrix(datan[82, ])
colnames(y) <- rownames(datan)[82]
z <- as.character(annot[(annot[ ,2] == colnames(y)),1])
x <- as.matrix(methyn[rownames(methyn) %in% z, ])
View(x)
GLMdata <- foreach(i =1:100) %dopar%
{
y <- as.matrix(datan[i, ])
colnames(y) <- rownames(datan)[i]
z <- as.character(annot[(annot[ ,2] == colnames(y)),1])
x <- as.matrix(methyn[rownames(methyn) %in% z, ])
if(nrow(x) == 1 | ncol(x) == 1) z
else if(nrow(x) >= 2)
{
x <- t(x)
class(x) <- "numeric"
cvfit <- cv.glmnet(x,y)
as.matrix(coef(cvfit, s = "lambda.min"))
}
else 0
}
GLMdata == 0
GLMdata[[1:100]] == 0
GLMdata[1:100] == 0
GLMdata[1:100]
cor.test(x,y)
GLMdata[[1]] <- cor.test(x,y)
GLMdata[[1]]
library(TCGAbiolinks)
library(foreach)
library(doMC)
registerDoMC(1)
query <- list()
a <- c("TCGA-BLCA","TCGA-GBM","TCGA-BRCA","TCGA-LUAD","TCGA-UCEC","TCGA-LUSC","TCGA-STAD","TCGA-COAD","TCGA-READ")
foreach(i=1:length(a)) %dopar%
{
query[[i]] <- GDCquery(project = a[i],data.category = "DNA methylation",data.type = "Methylation percentage",legacy = T)
GDCdownload(query[[i]])
}
library(GenomicFeatures)
hg19 <- makeTxDbFromUCSC(genome = "hg19", tablename = "refGene")
typeof(hg19)
class(hg19)
class(speciesMap)
head(speciesMap)
sizeof(hg19)
tail(speciesMap)
q()
source("https://bioconductor.org/biocLite.R")
biocLite("GEOquery")
?glmnet
library(glmnet)
?glmnet
??glmnet
library(GEOquery)
?GEOquery
??GEOquery
gsm <- getGEO(filename=system.file("extdata/GSM11805.txt.gz",package="GEOquery"))
warnings()
head(Meta(gsm))
head(gsm)
df <- Table(gsm)
head(df)
View(df)
GSMlist(gsm)[[1]]
GSMList(gsm)[[1]]
GSMList(gsm)
gse <- getGEO(filename=system.file("extdata/GSE781_family.soft.gz",package="GEOquery"))
df <- GSMList(gse)
df[[1]]
df[[2]]
library(glmnet)
data(QuickStartExample)
fit <- cv.glmnet(x,y)
levels(fit)
fit
df <- fit$glmnet.fit
df
plot(fit)
coef(fit, s = "lambda.min")
help("glmnet.control")
scoreMatrix <- matrix(nrow = 14, ncol = 15)
colnames(scoreMatrix) <- c("-", "R", "L", "V", "A", "T", "P", "G", "Q", "R", "T", "S", "P", "N", "R")  # Sequence 1
rownames(scoreMatrix) <- c("-", "K", "V", "G", "T", "S", "P", "A", "N", "K", "A", "T", "Q", "R")  # Sequence 2
gapPenalty = -1
matchPair = 4
mismatchPair = -2  # Scores
match.diagonal <- function(df, i, j)
{
if (rownames(df)[i] == colnames(df)[j])
return(as.numeric(df[i-1,j-1]) + matchPair)
else
return(as.numeric(df[i-1,j-1]) + mismatchPair)
}
seq1.gap <- function(df, i ,j)
return(as.numeric(df[i-1,j]) + gapPenalty)
seq2.gap <- function(df, i, j)
return(as.numeric(df[i,j-1]) + gapPenalty)
global.alignment <- function(df)
{
df[1, ] <- mismatchPair * 0:(ncol(df) - 1)
df[ ,1] <- mismatchPair * 0:(nrow(df) - 1)  # Matrix initialization
for (i in 2:nrow(df))
{
for (j in 2:ncol(df))
{
df[i,j] <- max(match.diagonal(df, as.numeric(i), as.numeric(j)),
seq1.gap(df, as.numeric(i), as.numeric(j)),
seq2.gap(df, as.numeric(i), as.numeric(j)))
}
}
return(df)
}
local.alignment <- function(df)
{
df[1, ] <- rep(0,ncol(df))
df[ ,1] <- rep(0,nrow(df))
for (i in 2:nrow(df))  # Global Alignment
{
for (j in 2:ncol(df))
{
df[i,j] <- max(match.diagonal(df, as.numeric(i), as.numeric(j)),
seq1.gap(df, as.numeric(i), as.numeric(j)),
seq2.gap(df, as.numeric(i), as.numeric(j)),
0)
}
}
return(df)
}
globalMatrix <- global.alignment(scoreMatrix)
localMatrix <- local.alignment(scoreMatrix)
write.table(localMatrix, "~/Documents/BINF 8210/2/localMatrix.txt")
library(TCGAbiolinks)
devtools::install_github(repo = "BioinformaticsFMRP/TCGAbiolinks")
load("/home/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/GLM_normal_CV.RData")
normal <- GLMdata
load("/home/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/GLM_cancer_CV.RData")
cancer <- GLMdata
rm(GLMdata)
ls()
ls()[1]
class(ls()[1])
a <- normal[[1]]
levels(a)
?levels
?lapply
a
a$nzero
lapply(a, function(x) print(x[x$nzero == 3]))
lapply(a, function(x) print(x))
lapply(a, function(x) print(x$nzero))
print(a$nzero)
lapply(a, function(x) print(x[6]))
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
print(a[6])
a[6][1]
b <- a[6]
b <- as.matrix(b)
View(b)
b <- as.matrix(a[6], sep = " ")
b <- unlist(a[6])
b <- matrix(unlist(a[6]))
b <- matrix(unlist(a[6]), byrow = T)
View(b)
b <- matrix(unlist(a[6], use.names = T))
View(b)
a
load("/home/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/Raw_Data/normal.RData")
length(nromal)
length(normal)
nrow(datan)
View(methyn)
b <- lapply(normal[[1:10]], length)
b <- lapply(normal[[1]], length)
b
length(b)
b[6]
b <- lapply(normal, names)
b[1:10]
a <- lpply(b, length)
a <- lapply(b, length)
a
lapply(a, function(x) ifelse(x != 10, print(x), next()))
head(annot)
rm(a, b,GLMdata)
a <- lapply(normal[1], function(x) x[x[6] == 3])
normal[[1]][6]
a <- lapply(normal[[1]], function(x) x[x[6] == 3])
function(x) x==3
normal[1]
normal[1][6]
normal[1[6]]
a <- normal[1]
a[6]
a[5]
a <- normal[[1]]
a <- lapply(normal, function(x) lapply(x, x[6] == 3))
a <- normal[1]
a[1][6]
1[6]
a
a[1]
a[2]
a[1][1]
a[1[1]]
a[1]$nobs
a$nobs
a <- normal[[1]]
a$beta
a[1]
a[2]
a[3]
a[4]
a[5]
a[7]
a[8]
a$glmnet.fit$beta
a[8][2]
a[8]
class(a[8])
class(a[7])
a[7]
b <- unlist(a$glmnet.fit)
class(b)
a <- normal[1][1:3]
a
a[2]
a[1][1]
a[1][2]
class()
class(a)
levels(a)
typeof(a)
b <- a[][1]
b
rm(a,b)
normal[][1]
a <- lapply(normal, function(x) lapply(x, names))
a[1]
a[[1]]
load("/home/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/GLM_normal_CV.RData")
load("/home/yi/data/DNA_Methylation/Methy_array/RData/piano/cluster.RData")
x <- rownames(normalCluster[normalCluster[ ,1] <= 0.05, ])
write.csv(x, "~/data/DNA_Methylation/Methy_array/RData/piano/normal.txt")
x <- rownames(tumorCluster[normalCluster[ ,1] <= 0.05, ])
write.csv(x, "~/data/DNA_Methylation/Methy_array/RData/piano/tumor.txt")
library(benchmarkme)
res <- benchmark_std()
plot(res)
upload_results(res)
get_datatable(res)
View(res)
library(mygene)
sessionInfo()
q()
?txtProgressBar
pb <- txtProgressBar(min = 0, max = nrow(expression),
char = "#", style = 3)
pb <- txtProgressBar(min = 0, max = 100,
char = "#", style = 3)
for (i in 1:100)
projects <- "BLCA"
projects[i]
projects[1]
for (i in seq_along(projects)) print(projects[i])
load("/home/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/Raw_Data/COAD.RData")
gene.list <- as.character(c(rownames(datan), rownames(datat)))
gene.list <- gene.list[!duplicated(gene.list)]
load("/home/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/R2/COAD.RData")
View(result.df)
i <- 3
temp <- result.df[ ,c(1,i)]
temp <- temp[!is.na(temp[ ,2])]
View(temp)
temp <- temp[!is.na(temp)]
temp <- result.df[ ,c(1,i)]
temp <- temp[!is.na(temp[ ,2]), ]
View(temp)
?wilcox.test
t.stat <- as.numeric(temp[ ,ncol(temp)])
head(t.stat)
names(t.stat) <- temp$Gene_Symbol
head(t.stat)
?cumsum
x <- cumsum(temp$normal3)
plot(x)
x <- temp$normal3
x <- x - mean(x)
y <- cumsum(x)
plot(y)
rm(annot)
rm(i, x, y)
head(t.stat)
t.stat <- t.stat - mean(t.stat)
head(t.stat)
mean(t.stat)
t.stat <- as.numeric(temp[, ncol(temp)])
mean(t.stat)
plot(t.stat)
hist(t.stat)
len(100)
length(100)
x <- norm(100)
set.seed(1)
x <- rnorm(1000)
x <- rnorm(1000, mean = 0.5, sd = 1)
plot(x)
hist(x)
load("~/data/DNA_Methylation/Methy_array/RData/Glmnet/R2/BLCA.RData")
View(result.df)
x <- result.df$normal2
hist(x)
summary(x)
x <- x[!is.na(x)]
summary(x)
class(x)
y <- x - mean(x)
summary(y)
hist(y)
tag.loc.vector <- sort(tag.loc.vector, decreasing = F)
tag.loc.vector <- vector(length=length(y), mode="numeric")
class(tag.loc.vector)
y <- gene.set
gene.set <- y
rm(x, y)
load("~/data/DNA_Methylation/Methy_array/RData/Glmnet/Raw_Data/COAD.RData")
rm(annot, methyn, methyt)
rm(convertName())
rm(convertName
)
rm(fitGLM, pairNames)
gene.list <- c(rownames(datan), rownames(datat))
gene.list <- gene.list[!duplicated(gene.list)]
loc.vector <- vector(length=length(gene.list), mode="numeric")
loc.vector[gene.list] <- seq(1, N)
N <- length(gene.list)
Nh <- length(gene.set)
loc.vector[gene.list] <- seq(1, N)
head(loc.vector)
loc.vector[1:500]
loc.vector[gene.list]
loc.vector[100]
tag.loc.vector <- loc.vector[gene.set]
N <- length(gene.list)
Nh <- length(gene.set)
Nm <-  N - Nh
loc.vector <- vector(length=N, mode="numeric")
peak.res.vector <- vector(length=Nh, mode="numeric")
valley.res.vector <- vector(length=Nh, mode="numeric")
tag.correl.vector <- vector(length=Nh, mode="numeric")
tag.diff.vector <- vector(length=Nh, mode="numeric")
tag.loc.vector <- vector(length=Nh, mode="numeric")
head(gene.list)
t.stat <- gene.set
gene.set <- as.character(result.df$Gene_Symbol)
loc.vector[gene.list] <- seq(1, N)
tag.loc.vector <- loc.vector[gene.set]
head(tag.loc.vector)
tag.loc.vector <- sort(tag.loc.vector, decreasing = F)
head(tag.loc.vector)
correl.vector <- t.stat
tag.correl.vector <- correl.vector[tag.loc.vector]
head(tag.correl.vector)
tag.correl.vector <- abs(tag.correl.vector)
?abs()
norm.tag <- 1.0/sum(tag.correl.vector)
sum(tag.correl.vector)
head(tag.correl.vector)
length(tag.correl.vector)
tail(tag.correl.vector)
tag.correl.vector <- correl.vector[tag.loc.vector]
head(loc.vector)
N <- length(gene.list)
Nh <- length(gene.set)
Nm <-  N - Nh
loc.vector <- vector(length=N, mode="numeric")
peak.res.vector <- vector(length=Nh, mode="numeric")
valley.res.vector <- vector(length=Nh, mode="numeric")
tag.correl.vector <- vector(length=Nh, mode="numeric")
tag.diff.vector <- vector(length=Nh, mode="numeric")
tag.loc.vector <- vector(length=Nh, mode="numeric")
loc.vector[gene.list] <- seq(1, N)
head(loc.vector)
tail(loc.vector)
tag.loc.vector <- loc.vector[gene.set]
head(tag.loc.vector)
tag.loc.vector <- sort(tag.loc.vector, decreasing = F)
correl.vector <- t.stat
tag.correl.vector <- correl.vector[tag.loc.vector]
tag.correl.vector <- abs(tag.correl.vector)
norm.tag <- 1.0/sum(tag.correl.vector)
tag.correl.vector <- tag.correl.vector * norm.tag
tag.correl.vector <- correl.vector[tag.loc.vector]
tag.correl.vector <- abs(tag.correl.vector)
tag.correl.vector <- tag.correl.vector[!is.na(tag.correl.vector)]
norm.tag <- 1.0/sum(tag.correl.vector)
tag.correl.vector <- tag.correl.vector * norm.tag
norm.no.tag <- 1.0/Nm
gene.set
gene.set <- gene.set[!is.na(gene.set)]
gene.list <- as.character(result.df$Gene_Symbol)
gene.list <- gene.list[!is.na(gene.list)]
gene.list <- as.character(c(rownames(datan), rownames(datat)))
gene.list <- gene.list[!duplicated(gene.list)]
gene.list <- rownames(datan)
gene.set <- result.df[ ,1:2]
View(gene.set)
gene.set <- gene.set[!is.na(gene.set$normal2), ]
gene.set <- gene.set$Gene_Symbol
gene.set <- as.character(gene.set)
head(gene.set)
N <- length(gene.list)
Nh <- length(gene.set)
Nm <-  N - Nh
loc.vector <- vector(length=N, mode="numeric")
peak.res.vector <- vector(length=Nh, mode="numeric")
valley.res.vector <- vector(length=Nh, mode="numeric")
tag.correl.vector <- vector(length=Nh, mode="numeric")
tag.diff.vector <- vector(length=Nh, mode="numeric")
tag.loc.vector <- vector(length=Nh, mode="numeric")
loc.vector[gene.list] <- seq(1, N)
tag.loc.vector <- loc.vector[gene.set]
tag.loc.vector <- sort(tag.loc.vector, decreasing = F)
correl.vector <- t.stat
head(loc.vector)
tag.correl.vector <- correl.vector[tag.loc.vector]
tag.correl.vector <- abs(tag.correl.vector)
norm.tag <- 1.0/sum(tag.correl.vector)
sum(tag.correl.vector)
tag.correl.vector <- vector(length=Nh, mode="numeric")
mean(t.stat)
temp <- result.df[ ,c(1,j)]
temp <- temp[!is.na(temp[ ,2]), ]
gene.set <- as.character(temp$Gene_Symbol)
t.stat <- as.numeric(temp[ ,ncol(temp)])
t.stat <- t.stat - mean(t.stat)
names(t.stat) <- gene.set
j <- 2
temp <- result.df[ ,c(1,j)]
temp <- temp[!is.na(temp[ ,2]), ]
gene.set <- as.character(temp$Gene_Symbol)
t.stat <- as.numeric(temp[ ,ncol(temp)])
t.stat <- t.stat - mean(t.stat)
names(t.stat) <- gene.set
t.stat=t.stat[!is.na(t.stat)]
gene.labels=names(t.stat)
obs.gene.list2 <- order(t.stat,decreasing=TRUE)
gene.set2 <- match(gene.set, gene.labels)
?signif
gene.set <- gene.set2
library(lintr)
setwd("~/SCP-028/DNA_Methylation/GSEA")
lint("analyseResults.R")
