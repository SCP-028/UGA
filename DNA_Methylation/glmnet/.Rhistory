setwd("C:/Git/UGA/DNA_Methylation/glmnet")
source("https://bioconductor.org/biocLite.R")
biocLite("rmarkdown")
library(rmarkdown)
sessionInfo()
load("C:/Users/jzhou/Desktop/pathways.list.GOMaco.CORUM.RCT.HGNC.Msigdb.gsc.RData")
load("C:/Users/jzhou/Desktop/BLCA.normalGLM.RData")
gsc$gsc$`CORUM:PA700 complex`
x <- unlist(gsc)
x[1]
x[2]
x[3]
x[4]
x[5]
x[6]
x <- unlist(gsc$gsc)
x[1]
head(x)
gsc$gsc[1]
gsc$gsc[2]
length(gsc$gsc)
source("https://bioconductor.org/biocLite.R")
biocLite("gage")
ls()
summary(normalGLM)
summary(gsc)
head(gsc$addInfo)
summary(gsc$gsc)
x <- gsc$gsc
head(x)
pathways <- lapply(gsc[[1]], function(x) sub("(.*)\\|.*", "\\1", x))  # Get the pathways' names right
pathways <- pathways[!duplicated(names(pathways))]
rm(x)
pathways[1]
biocLite("gageDate")
sessionInfo()
library(gage)
?gage
x <- normalGLM$A1BG
library(glmnet)
x <- normalGLM$A1BG
x <- x$GLM
biocLite("plotmo")
library(plotmo)
plotres(x)
typeof(x)
class(x)
x
plot.cv.glmnet(x)
summary(x)
x$glmnet.fit$dev.ratio
x$cvm
x$cvsd
library(boot)
load("C:/Users/jzhou/Desktop/moreTF/BLCA.normalGLM.RData")
View(results)
library(dplyr)
x <- results %>% filter(!is.na(`coef2_%dev`)) %>% select(gene_symbol, `coef2_%dev`)
View(x)
extractR2 <- function(results){
#   Extract %dev value from results dataframe, and corresponding gene symbols.
library(dplyr)
R2.coef2 <- results %>%
filter(!is.na(`coef2_%dev`)) %>%
select(gene_symbol, `coef2_%dev`)
R2.coef3 <- results %>%
filter(!is.na(`coef3_%dev`)) %>%
select(gene_symbol, `coef3_%dev`)
R2.coef4 <- results %>%
filter(!is.na(`coef4_%dev`)) %>%
select(gene_symbol, `coef4_%dev`)
R2.coef5 <- results %>%
filter(!is.na(`coef5_%dev`)) %>%
select(gene_symbol, `coef5_%dev`)
colnames(R2.coef2) <- c("gene_symbol", "r_squared")
colnames(R2.coef3) <- c("gene_symbol", "r_squared")
colnames(R2.coef4) <- c("gene_symbol", "r_squared")
colnames(R2.coef5) <- c("gene_symbol", "r_squared")
return(list(R2.coef2, R2.coef3, R2.coef4, R2.coef5))
}
rlist <- structure(NA,class="result")
"[<-.result" <- function(x,...,value) {
args <- as.list(match.call())
args <- args[-c(1:2,length(args))]
length(value) <- length(args)
for(i in seq(along=args)) {
a <- args[[i]]
if(!missing(a)) eval.parent(substitute(a <- v,list(a=a,v=value[[i]])))
}
x
}
rlist[r2.coef2, r2.coef3, r2.coef4, r2.coef5] <- extractR2(results)
View(r2.coef3)
?try
?arrange
extractR2 <- function(results){
#   Extract %dev value from results dataframe, and corresponding gene symbols.
library(dplyr)
R2.coef2 <- results %>%
filter(!is.na(`coef2_%dev`)) %>%
select(gene_symbol, `coef2_%dev`) %>%
arrange(`coef2_%dev`)
R2.coef3 <- results %>%
filter(!is.na(`coef3_%dev`)) %>%
select(gene_symbol, `coef3_%dev`) %>%
arrange(`coef3_%dev`)
R2.coef4 <- results %>%
filter(!is.na(`coef4_%dev`)) %>%
select(gene_symbol, `coef4_%dev`) %>%
arrange(`coef4_%dev`)
R2.coef5 <- results %>%
filter(!is.na(`coef5_%dev`)) %>%
select(gene_symbol, `coef5_%dev`) %>%
arrange(`coef5_%dev`)
colnames(R2.coef2) <- c("gene_symbol", "r_squared")
colnames(R2.coef3) <- c("gene_symbol", "r_squared")
colnames(R2.coef4) <- c("gene_symbol", "r_squared")
colnames(R2.coef5) <- c("gene_symbol", "r_squared")
return(list(R2.coef2, R2.coef3, R2.coef4, R2.coef5))
}
rlist[r2.coef2, r2.coef3, r2.coef4, r2.coef5] <- extractR2(results)
extractR2 <- function(results){
#   Extract %dev value from results dataframe, and corresponding gene symbols.
library(dplyr)
R2.coef2 <- results %>%
filter(!is.na(`coef2_%dev`)) %>%
select(gene_symbol, `coef2_%dev`) %>%
arrange(-`coef2_%dev`)
R2.coef3 <- results %>%
filter(!is.na(`coef3_%dev`)) %>%
select(gene_symbol, `coef3_%dev`) %>%
arrange(-`coef3_%dev`)
R2.coef4 <- results %>%
filter(!is.na(`coef4_%dev`)) %>%
select(gene_symbol, `coef4_%dev`) %>%
arrange(-`coef4_%dev`)
R2.coef5 <- results %>%
filter(!is.na(`coef5_%dev`)) %>%
select(gene_symbol, `coef5_%dev`) %>%
arrange(-`coef5_%dev`)
colnames(R2.coef2) <- c("gene_symbol", "r_squared")
colnames(R2.coef3) <- c("gene_symbol", "r_squared")
colnames(R2.coef4) <- c("gene_symbol", "r_squared")
colnames(R2.coef5) <- c("gene_symbol", "r_squared")
return(list(R2.coef2, R2.coef3, R2.coef4, R2.coef5))
}
rlist[r2.coef2, r2.coef3, r2.coef4, r2.coef5] <- extractR2(results)
View(r2.coef2)
load("C:/Users/jzhou/Desktop/BLCA.RData")
View(result.df)
View(result.df)
?select
gc()
x <- "coef2_%dev"
x <- results %>% select(x)
x <- results %>% select(one_of(x))
View(x)
x <- "coef2_%dev"
x <- results %>% select(gene_symbol, one_of(x))
x <- x %>% arrange(-one_of(`coef2_%dev`))
coef.num <- 2
coef.num <- paste0("coef", coef.num, "_%dev")
R2.coef2 <- results %>%
filter(!is.na(one_of(coef.num))) %>%
select(gene_symbol, one_of(coef.num))
View(results)
?list.files
df <- results[ ,c("gene_symbol", coef.num)]
View(df)
extractR2 <- function(results, coef.num){
#   Extract %dev value from results dataframe, and corresponding gene symbols.
library(dplyr)
coef.num <- paste0("coef", coef.num, "_%dev")
df <- results[ ,c("gene_symbol", coef.num)]
colnames(df) <- c("gene_symbol", "r_squared")
df <- df %>%
filter(!is.na(r_squared)) %>%
arrange(r_squared)
return(df)
}
View(r2.coef2)
r2.coef2 <- extractR2(results, 2)
View(r2.coef2)
extractR2 <- function(results, coef.num){
#   Extract %dev value from results dataframe, and corresponding gene symbols.
library(dplyr)
coef.num <- paste0("coef", coef.num, "_%dev")
df <- results[ ,c("gene_symbol", coef.num)]
colnames(df) <- c("gene_symbol", "r_squared")
df <- df %>%
filter(!is.na(r_squared)) %>%
arrange(-r_squared)
return(df)
}
r2.coef2 <- extractR2(results, 2)
View(r2.coef2)
View(result.df)
valley.r2.value <- 0
valley.r2.value <- 0.6
extractR2 <- function(results, coef.num, valley.r2.value){
#   Extract %dev value from results dataframe, and corresponding gene symbols.
library(dplyr)
coef.num <- paste0("coef", coef.num, "_%dev")
df <- results[ ,c("gene_symbol", coef.num)]
colnames(df) <- c("gene_symbol", "r_squared")
df <- df %>%
filter(!is.na(r_squared)) %>%
filter(r_squared >= valley.r2.value)
arrange(-r_squared)
return(df)
}
r2.coef2 <- extractR2(results, 2, 0.6)
extractR2 <- function(results, coef.num, valley.r2.value){
#   Extract %dev value from results dataframe, and corresponding gene symbols.
library(dplyr)
coef.num <- paste0("coef", coef.num, "_%dev")
df <- results[ ,c("gene_symbol", coef.num)]
colnames(df) <- c("gene_symbol", "r_squared")
df <- df %>%
filter(!is.na(r_squared)) %>%
filter(r_squared >= valley.r2.value) %>%
arrange(-r_squared)
return(df)
}
r2.coef2 <- extractR2(results, 2, 0.6)
View(r2.coef2)
