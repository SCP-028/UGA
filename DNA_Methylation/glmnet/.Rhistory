library(BiocInstaller)
biocLite()
biocLite(devtools)
biocLite("devtools")
devtools::install_github(repo = "BioinformaticsFMRP/TCGAbiolinks")
install.packages("R-box")
?sort
r2df <- data.frame(rep(NA, 10000), rep(0, 10000))
View(r2df)
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/GSEA/GSEAResults.RData")
View(r2df)
View(noR2.df)
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/COAD.RData")
View(result.df)
paste0("./GSEA161123/", projects[i], "_coef", coef.num, ".RData")
projects <- "BLCA"
i <- 1
coef.num <- 2
paste0("./GSEA161123/", projects[i], "_coef", coef.num, ".RData")
x <- FALSE
x == T
x == FALSE
F == False
x <- rnorm(10000)
hist(x)
x <- x >= 0
hist (x)
summary(x)
for(i in 1:length(x)){
if (x) {print(0)}
}
x <- F
!x
x == F
paste0("./GSEA161123/", projects[i], "_coef", coef.num, "_lm.RData"))
paste0("./GSEA161123/", projects[i], "_coef", coef.num, "_lm.RData")
x <- rnorm(2000)
y <- x[sample(x)]
?sample
sample(1:5000)
y <- x[sample(1:length(x))]
hist(x)
hist(y)
x <- x[order(x)]
y <- y[order(y)]
y <- x[sample(1:length(x))]
x <- as.data.frame(x)
View(x)
x <- t(x)
class(x)
y <- x
x <- rbind(rep(x, 10))
x <- y
ndim(x)
nrow(x)
ncol(x)
x <- rbind(rep(x, 2))
r <- rbind(y, y, y)
x <- r
rm(r)
y <- y[sample(1:ncol(y))]
y <- x[1, ]
y <- as.data.frame(y)
View(y)
y <- t(y)
z <- y[sample(1:ncol(y)), , drop = F]
z <- y[ ,sample(1:ncol(y)), drop = F]
hist(z)
?rbind
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/COAD.normalGLM.RData")
rm(list = ls())
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/COAD.normalGLM.RData")
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/COAD.TN_noNA.RData")
View(datan_final)
y <- rnorm(2000)
y <- as.data.frame(y)
y <- t(y)
View(y)
x <- matrix(rnorm(10000), nrow = 5)
View(x)
y.sample <- sample(1:ncol(y))
plot(y.sample)
cumsum(y.sample)
plot(cumsum(y.sample))
z <- y[ ,y.sample, drop = F]
View(z)
colnames(z) <- sample(a:z)
colnames(z) <- sample("a":"z")
fitlm <- as.data.frame(t(rbind(y, x)))
View(fitlm)
colnames(y) <- sample(1:2000)
View(y)
fitlm <- as.data.frame(t(rbind(y, x)))
View(fitlm)
?lm
lm(fitlm)
zz <- as.data.frame(t(rbind(z,x)))
lm(zz)
plot(lm(fitlm))
plot(lm(zz))
zz <- lm(zz)
fitlm <- lm(fitlm)
fitlm <- summary(fitlm)$r.squared
zz <- summary(zz)$r.squared
fitlm <- as.data.frame(t(rbind(y,x)))
fitlm <- lm(fitlm)
summary(fitlm)
library(glmnet)
library("BiocGenerics", lib.loc="C:/Users/jzhou/R")
biocLite("glmnet")
library("BiocInstaller", lib.loc="C:/Users/jzhou/R")
biocLite("glmnet")
library(glmnet)
?glmnet
??glmnet
fitlm <- as.data.frame(t(rbind(y,x)))
fitlm <- cv.glmnet(y, x)
y <- as.data.frame(y)
x <- as.data.frame(x)
fitlm <- cv.glmnet(y, x)
y <- as.data.frame(t(y))
x <- as.data.frame(t(x))
fitlm <- cv.glmnet(y, x)
View(x)
x <- as.matrix(x)
fitlm <- cv.glmnet(y, x)
View(x)
y <- as.matrix(y)
fitlm <- cv.glmnet(y, x)
fitlm <- cv.glmnet(x,y)
fitlm
background <- num()
background <- numeric()
background <- c(background, 1)
background <- c(background, summary(fitlm)$r.squared)
summary(fitlm)$r.squared
fitlm <- as.data.frame(t(rbind(y,x)))
fitlm <- as.data.frame(cbind(y,x))
View(fitlm)
background <- c(background, summary(fitlm)$r.squared)
summary(fitlm)$r.squared
fitlm <- lm(fitlm)
background <- c(background, summary(fitlm)$r.squared)
x <- as.data.frame(t(x))
View(x)
y <- as.data.frame(t(y))
nperm <- 5000
for (j in 1:nperm) {
y.sample <- sample(1:ncol(y))
y <- y[ ,y.sample, drop = F]
fitlm <- as.data.frame(t(rbind(y,x)))
fitlm <- lm(fitlm)
background <- c(background,
summary(fitlm)$r.squared)
}
for (j in 1:nperm) {
y.sample <- sample(1:ncol(y))
y <- y[ ,y.sample, drop = F]
fitlm <- as.data.frame(t(rbind(y,x)))
fitlm <- lm(fitlm)
background <- c(background,
summary(fitlm)$r.squared)
}
?rbind
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/expression/data.update1.list.RData")
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/expression/normalized/ESCA.update1.genes.normalized.RData")
View(datan)
y <- datan[1,]
x <- rnorm(13)
y <- datan[1, ,drop = FALSE]
x <- rnorm(13*5, nrow = 5)
x <- rnorm(65, nrow = 5)
x <- matrix(rnorm(65), nrow = 5)
View(x)
fitlm <- as.data.frame(t(rbind(y,x)))
View(fitlm)
background <- numeric()
for (j in 1:nperm) {
y.sample <- sample(1:ncol(y))
y <- y[ ,y.sample, drop = F]
fitlm <- as.data.frame(t(rbind(y,x)))
fitlm <- lm(fitlm)
background <- c(background,
summary(fitlm)$r.squared)
}
rSquare <- summary(fitlm)$r.squared
pValue <- sum(background > rSquare) / nperm
min(background)
pValue <- min(background)
rSquare <- min(background)
pValue <- sum(background > rSquare) / nperm
buildLnr <- function(df, methy, expression, p.value = F){
#   Build linear model of Gene Expression ~ X CpG islands
lmodel <- list()  # List to store linear model results
pb <- txtProgressBar(min = 0, max = length(df),
char = "#", style = 3)
if (p.value == F){
## Build data frame to store R^2
r2df <- data.frame(rownames(expression),
rep(0, nrow(expression)))
colnames(r2df) <- c("Gene_Symbol", "R_Square")
for (i in 1:length(df)){
temp <- df[[i]]
output <- getR2(i, temp, methy, expression, p.value)
lmodel[[i]] <- output[1]
r2df[i,2] <- output[2]
setTxtProgressBar(pb, i)
}
} else {
## Build data frame to store R^2 and p value
r2df <- data.frame(rownames(expression),
rep(0, nrow(expression)),
rep(0, nrow(expression)))
colnames(r2df) <- c("Gene_Symbol", "R_Square", "p_value")
for (i in 1:length(df)){
temp <- df[[i]]
output <- getR2(i, temp, methy, expression, p.value)
lmodel[[i]] <- output[1]
r2df[i,2] <- output[2]
r2df[i,3] <- output[3]
setTxtProgressBar(pb, i)
}
}
r2df <- r2df[complete.cases(r2df$R_Square), ]
return(list(lmodel, r2df))
}
View(buildLnr)
View(buildLnr)
load("D:/Backup/yi/data/DNA_Methylation/Methy_array/RData/Glmnet/COAD.normalGLM.RData")
library("lintr", lib.loc="C:/Users/jzhou/R")
??linte
??lintr
?lintr
setwd("C:/Git/UGA/DNA_Methylation/glmnet")
lint("./get_R2_of_glmnet.R")
